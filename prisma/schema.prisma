generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  nickName      String        @unique
  firstName     String
  lastName      String
  passwordHash  String
  email         String        @unique
  emailVerified Boolean       @default(false)
  role          Role          @default(TEAM_MEMBER)
  projects      ProjectUser[]
  tasks         Task[]        @relation("AssignedTask")
  tasksAuthor   Task[]        @relation("TaskAuthor")
  comments      Comment[]
  files         File[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

enum Role {
  ADMIN
  MANAGER
  TEAM_MEMBER
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  users       ProjectUser[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model ProjectUser {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  @@id([userId, projectId])
}

model Task {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  status       Status
  priority     Priority
  deadline     DateTime
  assignedTo   User     @relation("AssignedTask", fields: [assignedToId], references: [id])
  assignedToId Int
  createdBy    User     @relation("TaskAuthor", fields: [createdById], references: [id])
  createdById  Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

model Comment {
  id              Int             @id @default(autoincrement())
  description     String
  commentableType CommentableType
  commentableId   Int
  createdBy       User            @relation(fields: [createdById], references: [id])
  createdById     Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  @@index([commentableId, commentableType])
}

enum CommentableType {
  Project
  Task
}

model File {
  id           Int          @id @default(autoincrement())
  url          String       @unique
  fileableType FileableType
  fileableId   Int
  createdBy    User         @relation(fields: [createdById], references: [id])
  createdById  Int
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([fileableId, fileableType])
}

enum FileableType {
  Comment
  Task
  Project
}
